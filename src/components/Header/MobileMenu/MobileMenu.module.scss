@keyframes fadeIn {
  0% {
    transform: translate(-25px);
    opacity: 0;
  }
  100% {
    transform: translateX(0);
    opacity: 1;
  }
}

// This is really dumb, I know
// https://stackoverflow.com/a/72525340/8650500
@keyframes fadeIn2 {
  0% {
    transform: translate(-25px);
    opacity: 0;
  }
  100% {
    transform: translateX(0);
    opacity: 1;
  }
}

.mobileToggle {
  z-index: 1;
  all: unset;
  display: block;
  height: 38px;
  width: 38px;
  padding: 5px;
  border-radius: 50%;
  display: flex;
  justify-content: center;
  align-items: center;
  background: linear-gradient(
    to right,
    var(--palette-primary),
    var(--palette-secondary)
  );
  position: relative;
  transition: box-shadow .2s ease, transform .2s ease;

  &:hover, &:focus-visible {
    box-shadow: -6px 0px 4px 0px var(--palette-primary), 6px 0px 4px 0px var(--palette-secondary);
  }

  &:focus-visible {
    transform: scale(1.1);
  }

  &:active {
    transform: scale(.9);
  }

  &::before {
    // without this, Safari tries to redownload
    // the icon for every animation frame and it
    // causes errant flicker
    -webkit-backface-visibility: hidden;
  }

  &:checked::before {
    content: var(--icon-open);
    // accounts for non-square icon
    transform: translateY(-7px);
  }

  &::before {
    content: var(--icon-closed);
    height: 25px;
    width: 25px;
    z-index: 1;
    position: absolute;
    // accounts for non-square icon
    transform: translateY(-2px);
    filter: var(--icon-filter);
  }

  &::after {
    content: " ";
    background: var(--palette-bgMain);
    position: absolute;
    height: 28px;
    width: 28px;
    padding: 5px;
    border-radius: 50%;
  }

  &:not(:checked) ~ .mobileMenu {
    display: none;
  }
}
.mobileMenu {
  z-index: 1;
  display: flex;
  flex-direction: column;
  align-items: center;
  justify-content: center;
  gap: 2em;
  position: fixed;
  overflow: hidden;
  top: var(--header-height);
  left: 0;
  height: calc(100vh - var(--header-height));
  width: 100%;
  background: var(--palette-bgMain);
  animation: fadeIn .2s ease forwards;

  &.exiting {
    animation-name: fadeIn2;
    animation-direction: reverse;
    // stops the inner-animation from rerunning
    * {
      animation-name: none !important;
      opacity: 1 !important;
      transform: translateX(0) !important;
    }
  }
}
