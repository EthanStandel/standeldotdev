---
import { darkPalette, lightPalette, basePalette } from "../../utils/theme";

const prefixedLightPalette = Object.entries(lightPalette).reduce((map, [key, value]) => {
	map["light-" + key] = value;
	return map;
}, {} as Record<string, string>);

const palette = {
	...darkPalette,
	...basePalette,
	...prefixedLightPalette
};
---
<html lang="en"><slot /></html>
<style is:global define:vars={palette} lang="scss">
  @import url(
		"https://fonts.googleapis.com/css2?family=Poppins:wght@200;400;700&display=swap"
	);

  @keyframes fadeIn {
    0% {
      transform: translate(-25px);
      opacity: 0;
    }
    100% {
      transform: translateX(0);
      opacity: 1;
    }
  }

	html {

		--palette-primary: var(--primary);
		--palette-secondary: var(--secondary);

		@mixin dark {
			color-scheme: dark;
			--palette-bgMain: var(--bgMain);
			--palette-bgCard: var(--bgCard);
			--palette-txtMain: var(--txtMain);
			--palette-txtHeavy: var(--txtHeavy);
			--icon-filter: invert(1);
		}

		@mixin light {
			color-scheme: light;
			--palette-bgMain: var(--light-bgMain);
			--palette-bgCard: var(--light-bgCard);
			--palette-txtMain: var(--light-txtMain);
			--palette-txtHeavy: var(--light-txtHeavy);
			--icon-filter: invert(0);
		}
		&.dark-themeMode {
			@include dark;
		}

		@media (prefers-color-scheme: dark) {
			@include dark;
		}

		&.light-themeMode {
			@include light;
		}

		@media (prefers-color-scheme: light) {
			@include light;
		}

		&.custom-themeMode {
			--palette-primary: var(--custom-primary, var(--primary));
			--palette-secondary: var(--custom-secondary, var(--secondary));
			--palette-bgMain: var(--custom-bgMain, var(--bgMain));
			--palette-bgCard: var(--custom-bgCard, var(--bgCard));
			--palette-txtMain: var(--custom-txtMain, var(--txtMain));
			--palette-txtHeavy: var(--custom-txtHeavy, var(--txtHeavy));
		}
	}
</style>